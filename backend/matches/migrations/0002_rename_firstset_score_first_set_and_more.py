# Generated by Django 5.0.3 on 2024-03-23 19:46

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("matches", "0001_initial"),
    ]

    operations = [
        migrations.RenameField(
            model_name="score",
            old_name="firstSet",
            new_name="first_set",
        ),
        migrations.RenameField(
            model_name="score",
            old_name="secondSet",
            new_name="second_set",
        ),
        migrations.RenameField(
            model_name="score",
            old_name="thirdSet",
            new_name="third_set",
        ),
        migrations.RemoveField(
            model_name="game",
            name="awayScore",
        ),
        migrations.RemoveField(
            model_name="game",
            name="homeScore",
        ),
        migrations.RemoveField(
            model_name="match",
            name="awayTeam",
        ),
        migrations.RemoveField(
            model_name="match",
            name="homeTeam",
        ),
        migrations.RemoveField(
            model_name="score",
            name="players",
        ),
        migrations.AlterField(
            model_name="game",
            name="match",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="matches.match"
            ),
        ),
        migrations.AlterField(
            model_name="player",
            name="school",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="matches.school"
            ),
        ),
        migrations.CreateModel(
            name="GamePlayer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("winner", models.BooleanField(default=False)),
                (
                    "game",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="matches.game"
                    ),
                ),
                (
                    "player_one",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="matches.player"
                    ),
                ),
                (
                    "player_two",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="player_two",
                        to="matches.player",
                    ),
                ),
                (
                    "score",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="matches.score"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Team",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("home", models.BooleanField(default=False)),
                ("winner", models.BooleanField(default=False)),
                (
                    "match",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="matches.match"
                    ),
                ),
                (
                    "school",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="matches.school"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="match",
            name="teams",
            field=models.ManyToManyField(through="matches.Team", to="matches.school"),
        ),
    ]
